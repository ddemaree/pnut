# Pnut. A simple, private, awesome URL shortener.

Pnut is a quick and dirty little app intended to make it easy to include custom short URLs for use in presentations, books, and the like.

Pnut is _not_ a replacement for `bit.ly`, `goo.gl`, or `t.co`. Not only do those services have the short-URLs-in-tweets market pretty well covered, the existence of `t.co` has made them fairly unnecessary unless you want stats on who's using your URLs. Stats are cool, and I plan to add a basic stats-counting feature to Pnut in the future, but it's not here on day one, because YAGNI.

What Pnut _is_ here to do: make it easy to create a short URL that looks like this:

```
go.dem.mx/gitbook/example1
```

In this example, `go.dem.mx` is my custom _hostname_ (which in this case is associated with a Heroku app), `gitbook` is a _namespace_, and `example1` is the _slug_. You can also have URLs with only a slug (which live in the blank or root namespace), or you can use none of the above and refer to short URLs by their base36 primary key.

In its present, very rough form, Pnut will resolve any URL on any hostname that points to it — that's to say, if both `go.dem.mx` and `go.demaree.me` are pointing to my Heroku app, `go.dem.mx/duck` and `go.demaree.me/duck` will redirect to the same URL. In the future, it should be possible to scope URLs by hostname, so that these two _can_ be different, enabling you to have one set of short URLs for business and another for something resembling pleasure.

## So, seriously, why Pnut?

There are two things Pnut does that I needed, which other URL shorteners either don't do or don't do well:

1. **Namespaces.** Pnut makes it easy to scope unique slugs within a prefix, so related URLs can follow a similar format. In the future, this can be extended further to support something like "show notes"-like lists of all the links in a presentation or book.

2. **Editability.** When I'm putting together a talk, I like to include a URL for the slides even before I've uploaded the slides to Speaker Deck or some other destination. As a Pnut user, I want to be able to create my short URL _first_, then set or change its endpoint URL at any time.


## Public URL formats handled by Pnut

`http://example.com/x/:id`: The "root" namespace for `example.com`. Resolves to whatever URL has the `example.com` hostname and the base36 ID `:id`.

`http://example.com/:namespace/:slug`: A URL with the namespace `:namespace` and the slug `:slug` within the `example.com` hostname.

Pnut also exposes a `+` URL route similar to Bitly, which will show a detail page with stats, notes, and whatnot.

## Pnut is not at all finished

I seriously hacked this together over two days while also working on [my talk for WindyCityRails 2013](http://go.dem.mx/wcr2013/slides). It's not complete, but maybe you can help me with that? Pull requests will be thoughtfully reviewed and graciously accepted.

### Actual problems

- **No tests.** Pnut is a very minimum-viable product, and while its core functionality has been tested by me, the next step is to refactor and add tests so this code can be good.
- **Better admin authentication.** The app currently uses the environment config to set a plaintext password that restricts access to the admin. This sucks for reasons I hope are obvious to you; perhaps you can help me decide how to fix it.
- **General jankiness.** The admin UI is a serious mess, though it does have the beginnings of some nice JS-based interactions.

### Feature wishlist

- **Stats!** As a start I want to record all visits and referers for 30 days (if not longer), plus some roll-up or summary stats on a weekly or monthly basis after that.
- The ability to assign notes/descriptions to each URL after it's created.
- Pass-through referrers (i.e., the Referer header sent to the endpoint URL should reflect the original request if at all possible)
- URLs that aren't redirects: Maybe instead of uploading images/PDFs/etc to a service like CloudApp — which is another major short-URL use case — you can upload them to an S3 bucket managed by your Pnut instance?
- General polished Cadillac-ness.

## Questions?

Email me at <david@demaree.me>.

Copyright &copy;2013 David Demaree. Pnut is open source software under the MIT license (see the LICENSE.txt file for more info).